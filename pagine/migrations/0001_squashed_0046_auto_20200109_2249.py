# Generated by Django 3.0.2 on 2020-01-25 22:14

import ckeditor_uploader.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import pagine.models
import taggit.managers


class Migration(migrations.Migration):

    replaces = [('pagine', '0001_initial'), ('pagine', '0002_auto_20191122_1418'), ('pagine', '0003_location'), ('pagine', '0004_auto_20191122_1623'), ('pagine', '0005_auto_20191122_1947'), ('pagine', '0006_location_slug'), ('pagine', '0007_auto_20191123_0027'), ('pagine', '0008_auto_20191124_1832'), ('pagine', '0009_imageentry'), ('pagine', '0010_imageentry_thumb'), ('pagine', '0011_auto_20191124_2110'), ('pagine', '0012_auto_20191124_2125'), ('pagine', '0013_auto_20191124_2236'), ('pagine', '0014_imageentry_name'), ('pagine', '0015_auto_20191202_1815'), ('pagine', '0016_auto_20191202_1851'), ('pagine', '0017_location_image2'), ('pagine', '0018_remove_location_image2'), ('pagine', '0019_auto_20191205_2140'), ('pagine', '0020_event'), ('pagine', '0021_auto_20191206_1817'), ('pagine', '0022_auto_20191206_1920'), ('pagine', '0023_auto_20191212_1732'), ('pagine', '0024_auto_20191213_1207'), ('pagine', '0025_auto_20191213_2232'), ('pagine', '0026_auto_20191214_1052'), ('pagine', '0027_auto_20191214_1158'), ('pagine', '0028_auto_20191215_1604'), ('pagine', '0029_auto_20191215_1612'), ('pagine', '0030_auto_20191216_0019'), ('pagine', '0031_auto_20191216_1703'), ('pagine', '0032_auto_20191218_2350'), ('pagine', '0033_auto_20191219_1343'), ('pagine', '0034_auto_20191220_1230'), ('pagine', '0035_auto_20191220_1459'), ('pagine', '0036_auto_20191220_1527'), ('pagine', '0037_auto_20191221_1043'), ('pagine', '0038_auto_20191221_1054'), ('pagine', '0039_auto_20191227_1227'), ('pagine', '0040_auto_20191227_1237'), ('pagine', '0041_auto_20191231_1653'), ('pagine', '0042_auto_20191231_1702'), ('pagine', '0043_auto_20191231_1715'), ('pagine', '0044_auto_20200101_1634'), ('pagine', '0045_auto_20200109_2243'), ('pagine', '0046_auto_20200109_2249')]

    initial = True

    dependencies = [
        ('users', '0021_remove_member_course2'),
        ('taggit', '0003_taggeditem_add_unique_index'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0014_auto_20191122_1433'),
    ]

    operations = [
        migrations.CreateModel(
            name='ImageEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('image', models.ImageField(upload_to=pagine.models.date_directory_path)),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Descrizione')),
                ('thumb', models.CharField(blank=True, editable=False, max_length=200, null=True)),
                ('name', models.CharField(blank=True, editable=False, max_length=50, null=True, verbose_name='Nome')),
            ],
            options={
                'verbose_name': 'Immagine',
                'verbose_name_plural': 'Immagini',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Il nome del luogo', max_length=50, verbose_name='Titolo')),
                ('address', models.CharField(help_text='Via/Piazza, civico, CAP, Città', max_length=200, verbose_name='Indirizzo')),
                ('gmap_link', models.URLField(blank=True, help_text="Dal menu di Google Maps seleziona 'Condividi/link',                    copia il link e incollalo qui", null=True, verbose_name='Link di Google Map')),
                ('gmap_embed', models.TextField(blank=True, help_text="Dal menu di Google Maps seleziona 'Condividi/incorpora',                    copia il link e incollalo qui", max_length=500, null=True, verbose_name='Incorpora Google Map')),
                ('body', models.TextField(blank=True, null=True, verbose_name='Descrizione')),
                ('slug', models.SlugField(default='casa-di-marco', unique=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pagine.ImageEntry', verbose_name='Immagine')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('phone', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telefono/i')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Sito internet')),
            ],
            options={
                'verbose_name': 'Luogo',
                'verbose_name_plural': 'Luoghi',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Il titolo dell'evento", max_length=50, verbose_name='Titolo')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pagine.ImageEntry', verbose_name='Immagine')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Lista di categorie separate da virgole', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Categorie')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Quando')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='pagine.Location', verbose_name='Dove')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(help_text='Scrivi qualcosa.', verbose_name='Lancio')),
                ('intro', models.CharField(default='Un altro appuntamento con RP!', max_length=100, verbose_name='Introduzione')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Responsabile')),
                ('slug', models.SlugField(editable=False, null=True)),
                ('chronicle', ckeditor_uploader.fields.RichTextUploadingField(default="Inserisci qui la cronaca dell'evento", verbose_name='Cronaca')),
                ('notice', models.CharField(blank=True, choices=[('NOSP', 'Non inviare'), ('SPAM', 'Da inviare'), ('DONE', 'Già inviata')], help_text="Non invia in automatico, per farlo seleziona l'Evento\n            dalla Lista degli Eventi, imposta l'azione 'Invia notifica' e fai\n            clic su 'Vai'.\n            ", max_length=4, null=True, verbose_name='Notifica via email')),
                ('restricted', ckeditor_uploader.fields.RichTextUploadingField(blank=True, help_text='Inserisci qui materiale riservato ai soci', null=True, verbose_name='Area riservata')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventi',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Il titolo dell'articolo", max_length=50, verbose_name='Titolo')),
                ('slug', models.SlugField(editable=False, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data')),
                ('intro', models.CharField(default='Un altro articolo di approfondimento da RP!', max_length=100, verbose_name='Introduzione')),
                ('body', ckeditor_uploader.fields.RichTextUploadingField(help_text='Scrivi qualcosa.', verbose_name='Testo')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Autore')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pagine.ImageEntry', verbose_name='Immagine')),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='Lista di categorie separate da virgole', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Categorie')),
            ],
            options={
                'verbose_name': 'Articolo',
                'verbose_name_plural': 'Articoli',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='EventUpgrade',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text="Il titolo dell'aggiornamento", max_length=50, verbose_name='Titolo')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data')),
                ('body', models.TextField(help_text='Scrivi qualcosa.', verbose_name='Aggiornamento')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_upgrades', to='pagine.Event')),
            ],
            options={
                'verbose_name': 'Aggiornamento',
                'verbose_name_plural': 'Aggiornamenti',
                'ordering': ('-date',),
            },
        ),
        migrations.CreateModel(
            name='UserUpload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data')),
                ('image', models.ImageField(blank=True, null=True, upload_to=pagine.models.date_directory_path, verbose_name='Immagine')),
                ('body', models.TextField(help_text='Scrivi qualcosa.', verbose_name='Testo')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='event_uploads', to='pagine.Event')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Utente')),
                ('post', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_uploads', to='pagine.Blog')),
            ],
            options={
                'verbose_name': 'Contributo',
                'verbose_name_plural': 'Contributi',
                'ordering': ('-id',),
            },
        ),
    ]
